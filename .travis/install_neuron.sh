#!/bin/bash
set -e

# for nightly/weekly builds we test multiple compilers and build options
if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then

    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        packages=(
                "neuron@develop +python +mpi +shared %gcc ^python@2.7"
                "neuron@develop +python +mpi -shared %gcc ^python@3"
                "neuron@develop -python -mpi -shared %gcc"
                "neuron@develop +python +mpi +shared %gcc"
                "neuron@develop +python +mpi -shared %clang ^python@2.7"
                "neuron@develop +python +mpi +shared %clang ^python@3"
        )
    else
        packages=(
                "neuron@develop +python +mpi +shared %clang ^python@2.7"
                "neuron@develop -python -mpi -shared %clang"
                "neuron@develop +python +mpi +shared %clang ^python@3"
                "neuron@develop +python +mpi +shared %gcc ^python@2.7"
                "neuron@develop +python +mpi +shared %gcc ^python@3"
        )
    fi
# for pull request do minumum builds (i.e. single compiler per platform)
else

    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        packages=(
                "neuron@develop -python -mpi -shared %gcc"
                "neuron@develop +python +mpi +shared %gcc ^python@2.7"
                "neuron@develop +python +mpi +shared %clang ^python@3"
                 )
    else
        packages=(
                "neuron@develop -python -mpi -shared %clang"
                "neuron@develop +python +mpi +shared %clang ^python@2.7"
                "neuron@develop +python +mpi +shared %gcc ^python@3"
                 )
    fi

    # for pull request we want to build the PR branch/commit which is already
    # cloned. replace github url with local directory where NEURON is cloned
    neuron_package=$TRAVIS_BUILD_DIR/spack-packages/packages/neuron/package.py
    sed -i'' -e "s#git=github#git='file:///$TRAVIS_BUILD_DIR'#g" $neuron_package

fi


# initialize module
if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    source /etc/profile.d/modules.sh
else
    source /usr/local/opt/modules/init/bash
fi


# spack command line support
source $SPACK_ROOT/share/spack/setup-env.sh


# show neuron package info
spack info neuron


# to display build log in case of build error
options="--show-log-on-error"


# number of packages being installed
echo " == > BUILDING ${#packages[*]} PACKAGES : "${packages[*]}""


# build all packages using spack
for package in "${packages[@]}"
do
    echo " == > PACKAGE SPEC : spack spec -I $package"
    spack spec -I $package

    # install package: travis has 4MB limit of stdout log and hence not using `-v`
    echo " == > INSTALLING PACKAGE : spack install $package"
    spack install $options $package

    # store old path env (moudle purge workaround)
    export OLD_PATH=$PATH

    # check if package installed properly
    echo " == > LOADING INSTALLED PACKAGE : spack load $package "
    spack load $package

    # we can run neurondemo if mpi was enabled for build
    if [[ ${package} == *"-mpi"* ]];then

        echo " == > SKIPPING NEURONDEMO FOR NON-MPI BUILD "
    else

        echo " == > RUNNING NEURONDEMO "
        set -x
        echo -e 'topology()' | "neurondemo" | grep -q soma
        set +x
    fi


    # clean up
    spack clean -s
    module purge
    export PATH=$OLD_PATH
done


# show all generated modules
echo " == > AUTOGENERATED MODULES : module avail"
module avail


# show generated module
if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    name="neuron/develop-gcc-mpi-python2-shared"
else
    name="neuron/develop-clang-mpi-python2-shared"
fi


echo " == > SAMPLE MODULE : module show $name"
module show $name
