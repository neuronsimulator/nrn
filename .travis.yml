#=============================================================================
# Travis NEURON settings
#=============================================================================

#=============================================================================
# Environment
#=============================================================================
language: cpp
osx_image: xcode11.3
dist: bionic

#=============================================================================
# Git Clone
#=============================================================================
# Disable submodule cloning as we want to test selective cloning
# Disable depth to allow wheel to get correct version number with tag
git:
  submodules: false
  depth: false

#=============================================================================
# Common Packages
#=============================================================================
addons:
    apt:
        sources:
        - sourceline: 'ppa:ubuntu-toolchain-r/test'
        packages:
        - doxygen
        - libopenmpi-dev
        - libmpich-dev
        - libx11-dev
        - libxcomposite-dev
        - mpich
        - openmpi-bin
        - patchelf
        - python-pip
        - python-scipy
        - python-tk
        - python3-pip
        - python3-scipy
        - python3-tk
        - python3-venv
        - g++-5
        - g++-6
        - g++-8
        - g++-9
    homebrew:
        packages:
        - doxygen
        - mpich
        - openmpi
        - xz

virtualenv:
    system_site_packages: true

#=============================================================================
# Configure build matrix and corresponding environment
#=============================================================================
env:
  global:
    - PYTHON="$(which python3)"
    - PIP="$(which pip3)"
    - INSTALL_DIR="$HOME/install"
  jobs:
    - BUILD_MODE=cmake
      CMAKE_OPTION="-DNRN_ENABLE_BINARY_SPECIAL=ON -DNRN_ENABLE_MPI=ON -DNRN_ENABLE_INTERVIEWS=ON -DNRN_ENABLE_CORENEURON=ON"
      BUILD_DOCUMENTATION=ON
      MATRIX_EVAL="CC=gcc CXX=g++"
    - BUILD_MODE=setuptools
      MATRIX_EVAL="CC=gcc-8 CXX=g++-8"
    - BUILD_MODE=autotools
      CONFIG_OPTIONS="--without-x --without-paranrn --with-nrnpython=$(which python2) PYTHON_BLD=$(which python2)"
      PYTHON="$(which python2)"
      PIP="$(which pip2)"
      MATRIX_EVAL="CC=gcc CXX=g++"
    - BUILD_MODE=autotools
      CONFIG_OPTIONS="--without-x --with-paranrn=dynamic --with-nrnpython=$PYTHON"
      MATRIX_EVAL="CC=gcc-8 CXX=g++-8"
    - BUILD_MODE=cmake
      CMAKE_OPTION="-DNRN_ENABLE_MPI=OFF -DNRN_ENABLE_INTERVIEWS=OFF -DNRN_ENABLE_CORENEURON=ON"
      MATRIX_EVAL="CC=gcc-5 CXX=g++-5"
    - BUILD_MODE=cmake
      CMAKE_OPTION="-DNRN_ENABLE_MPI=ON -DNRN_ENABLE_INTERVIEWS=ON -DNRN_ENABLE_CORENEURON=OFF"
      MATRIX_EVAL="CC=gcc-6 CXX=g++-6"
    - BUILD_MODE=cmake
      CMAKE_OPTION="-DNRN_ENABLE_PYTHON=OFF -DNRN_ENABLE_RX3D=OFF -DNRN_ENABLE_CORENEURON=ON"
      MATRIX_EVAL="CC=gcc-9 CXX=g++-9"
    - BUILD_MODE=cmake
      NRN_ENABLE_PYTHON_DYNAMIC=ON
      MATRIX_EVAL="CC=gcc-8 CXX=g++-8"
os:
  - linux
  - osx

#=============================================================================
# Setup environment and Install dependencies
#=============================================================================
before_install:
  - |
    if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
      if ! git diff --name-only ${TRAVIS_COMMIT_RANGE} | grep -qvE '(\.md)$|^(Copyright)$|^(docs/)' ; then
        echo "Skipping CI build since we have docs-only changes for ${TRAVIS_COMMIT_RANGE} :"
        git diff --name-only ${TRAVIS_COMMIT_RANGE}
        exit
      fi
    fi
  - echo $LANG
  - echo $LC_ALL
  - $CXX -v
  - export PYTHONPATH=$PYTHONPATH:$INSTALL_DIR/lib/python/;
  - python3 -c 'import os,sys; os.set_blocking(sys.stdout.fileno(), True)'

install:
  - $PIP install --user wheel setuptools;
  - $PIP install --user scipy matplotlib bokeh ipython cython pytest mpi4py --upgrade;
  # add cython location to PATH
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      export CYTHON_LIB=$($PIP show cython | grep Location);
      export CYTHON_EXE=$(echo $CYTHON_LIB | awk '{print $2}' | awk -F "lib" '{print$1}')"bin";
      export PATH=$CYTHON_EXE:$PATH;
      brew link --overwrite python;
    fi
  - if [ "$BUILD_DOCUMENTATION" = "ON" ] && [ "$CC_FOR_BUILD" = "gcc" ]; then
      $PIP install --user -r docs/docs_requirements.txt --upgrade;
    fi

#=============================================================================
# Build, install and test
#=============================================================================
script:
  # OS X without readline
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      export CONFIG_OPTIONS="$CONFIG_OPTIONS --with-readline=no";
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      eval "${MATRIX_EVAL}";
    fi
  # different builds with CMake
  - if [ "$BUILD_MODE" == "cmake" ]; then
      if [ "$NRN_ENABLE_PYTHON_DYNAMIC" == "ON" ]; then
        export PYTHON2=$(which python2);
        export PYTHON3=$(which python3);
        export CMAKE_OPTION="-DNRN_ENABLE_PYTHON=ON -DNRN_ENABLE_PYTHON_DYNAMIC=ON -DNRN_PYTHON_DYNAMIC=${PYTHON2};${PYTHON3} -DNRN_ENABLE_CORENEURON=ON";
      else
        export CMAKE_OPTION="$CMAKE_OPTION -DPYTHON_EXECUTABLE=${PYTHON} -DNRN_ENABLE_CORENEURON=ON";
      fi;
      mkdir build && cd build;
      cmake $CMAKE_OPTION -DNRN_ENABLE_TESTS=ON -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR ..;
      cmake --build . -- -j 2;
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        echo $'[install]\nprefix='>src/nrnpython/setup.cfg;
      fi;
      if [ "$NRN_ENABLE_PYTHON_DYNAMIC" == "ON" ]; then
             echo "--RUNNING BASIC TESTS FROM BUILD DIR--";
             NEURONHOME=`pwd`/share/nrn  PYTHONPATH=`pwd`/lib/python PATH=`pwd`/bin LD_LIBRARY_PATH=`pwd`/lib DYLD_LIBRARY_PATH=`pwd`/lib $PYTHON2 -c "from neuron import h; import neuron; neuron.test()";
             NEURONHOME=`pwd`/share/nrn  PYTHONPATH=`pwd`/lib/python PATH=`pwd`/bin LD_LIBRARY_PATH=`pwd`/lib DYLD_LIBRARY_PATH=`pwd`/lib $PYTHON3 -c "from neuron import h; import neuron; neuron.test()";
      fi;
      make install;
      export PATH=$INSTALL_DIR/bin:$PATH;
      ctest -VV && make install;
    elif [ "$BUILD_MODE" == "setuptools" ]; then
      ./packaging/python/build_wheels.bash travis;
    elif [ "$BUILD_MODE" == "autotools" ]; then
      export PATH=$INSTALL_DIR/x86_64/bin:$PATH;
      ./.travis_build.sh $INSTALL_DIR;
    fi

  # basic tests for autoconf
  - if [ "$BUILD_MODE" == "autotools" ]; then
        $PYTHON --version && $PYTHON -c 'import neuron; neuron.test()';
    fi;

  # basic test for cmake when python is not disabled
  - if [[ "$BUILD_MODE" == "cmake" && "$CMAKE_OPTION" != *"NRN_ENABLE_PYTHON=OFF"* ]]; then
        $PYTHON --version && $PYTHON -c 'import neuron; neuron.test()';
    fi;

  # test neurondemo with cmake and autoconf
  - if [ "$BUILD_MODE" != "setuptools" ]; then
      neurondemo -nogui -c 'demo(4)' -c 'run()' -c 'quit()';
    fi;

  # with cmake dynamic check python2 and python3 together
  - if [[ "$BUILD_MODE" == "cmake" && "$NRN_ENABLE_PYTHON_DYNAMIC" == "ON" ]]; then
      $PYTHON3 -c 'import neuron; neuron.test()' && $PYTHON2 -c 'import neuron; neuron.test()';
    fi;

  # with autotools run rxd tests manually
  - if [[ "$BUILD_MODE" == "autotools" && "$TRAVIS_OS_NAME" != "osx" ]]; then
      $PYTHON share/lib/python/neuron/rxdtests/run_all.py;
    fi;

  # with setuptools / pip, use wheel under virtual environment
  - if [ "$BUILD_MODE" == "setuptools" ]; then
      neuron_wheel=wheelhouse/NEURON*.whl;
      ./packaging/python/test_wheels.sh $PYTHON $neuron_wheel;
    fi;
  # with setuptools / pip, use wheel for global install
  - if [ "$BUILD_MODE" == "setuptools" ]; then
      neuron_wheel=wheelhouse/NEURON*.whl;
      ./packaging/python/test_wheels.sh $PYTHON $neuron_wheel false;
    fi;

#=============================================================================
# Prepare Documentation
#=============================================================================
after_success:
  - if [ "$BUILD_DOCUMENTATION" = "ON" ] && [ "$CC_FOR_BUILD" = "gcc" ]; then
      echo "------- Build Doxygen Documentation -------";
      pushd $TRAVIS_BUILD_DIR/build;
      make docs;
      echo "-------- Disable jekyll --------";
      pushd $TRAVIS_BUILD_DIR/build/docs;
      touch .nojekyll;
    fi

#=============================================================================
# Whitelist master branch to run Travis CI with it after merge
#=============================================================================
branches:
  only:
    - master

#=============================================================================
# Documentation deployment
#=============================================================================
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  keep_history: false
  local_dir: $TRAVIS_BUILD_DIR/build/docs
  target_branch: gh-pages
  on:
    branch: master
    condition: $BUILD_DOCUMENTATION = ON && $CC_FOR_BUILD = gcc && $TRAVIS_OS_NAME = linux
