name: Build NEURON Python wheels

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:
    inputs:
      rel_release:
        description: Release branch/commit
        default: 'release/x.y'
        required: true
      rel_version:
        description: Release version (tag name), in format major.minor.patch
        default: ''
        required: false
      upload:
        description: Whether to upload to PyPI or not
        default: false
        required: true
        type: boolean
      build_type:
        description: The type of build (release or nightly)
        default: 'nightly'
        options:
          - 'nightly'
          - 'release'
      base_image_x86_64:
        description: The custom base container image to use for manylinux builds (x86_64)
      base_image_aarch64:
        description: The custom base container image to use for manylinux builds (aarch64)

jobs:
  build-test:
    name: Build and test Python ${{ matrix.python-version }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: ['macos-14', 'ubuntu-22.04-arm']
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        include:
          - python-version: '3.9'
            python-org-version: '3.9.13'
            python-installer-name: 'macos11.pkg'

          - python-version: '3.10'
            python-org-version: '3.10.11'
            python-installer-name: 'macos11.pkg'

          - python-version: '3.11'
            python-org-version: '3.11.7'
            python-installer-name: 'macos11.pkg'

          - python-version: '3.12'
            python-org-version: '3.12.0'
            python-installer-name: 'macos11.pkg'

          - python-version: '3.13'
            python-org-version: '3.13.0'
            python-installer-name: 'macos11.pkg'

          # enable when Azure CI is removed
          #- os: 'ubuntu-22.04'
          #  base_image: 'docker.io/neuronsimulator/neuron_wheel:manylinux_2_28_x86_64'

          - os: 'ubuntu-22.04-arm'
            base_image: 'docker.io/neuronsimulator/neuron_wheel:manylinux_2_28_aarch64'

    steps:
      - name: Check out code
        if: github.event_name != 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Check out code for specific release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.rel_release }}
          submodules: recursive
          fetch-depth: 0

      - name: Install Python from python.org
        if: runner.os == 'macOS'
        run: |
          installer="python-${{ matrix.python-org-version }}-${{ matrix.python-installer-name }}"
          url="https://www.python.org/ftp/python/${{ matrix.python-org-version }}/${installer}"
          curl $url -o $installer
          sudo installer -pkg $installer -target /

      - name: Install System Dependencies
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz
          brew install flex bison cmake mpich
          brew unlink mpich && brew install openmpi
          cmake --version
          # Uninstall libomp for compatibility with issue #817
          brew uninstall --ignore-dependencies libomp || echo "libomp doesn't exist"
          echo "$(brew --prefix)/opt/cmake/bin:$(brew --prefix)/opt/flex/bin:$(brew --prefix)/opt/bison/bin" >> $GITHUB_PATH

      - name: Install readline
        if: runner.os == 'macOS'
        run: |
          sudo mkdir -p /opt/nrnwheel/$(uname -m)
          sudo bash packaging/python/build_static_readline_osx.bash

      - name: Set env
        run: |
          BUILD_TYPE="${{ github.event.inputs.build_type }}"
          UPLOAD="${{ github.event.inputs.upload }}"
          # if they're empty, it means its not a workflow_dispatch, so we set a default
          BUILD_TYPE="${BUILD_TYPE:-nightly}"
          UPLOAD="${UPLOAD:-false}"
          if [ "${BUILD_TYPE}" = 'nightly' ]
          then
            echo "NRN_NIGHTLY_UPLOAD=true" >> $GITHUB_ENV
            echo "NEURON_NIGHTLY_TAG=-nightly" >> $GITHUB_ENV
          else
            echo "NRN_NIGHTLY_UPLOAD=false" >> $GITHUB_ENV
            echo "NEURON_NIGHTLY_TAG=" >> $GITHUB_ENV
          fi

      - name: Override env for scheduled run
        if: github.event_name == 'schedule'
        run: |
          echo "NRN_NIGHTLY_UPLOAD=true" >> $GITHUB_ENV
          echo "NEURON_NIGHTLY_TAG=-nightly" >> $GITHUB_ENV

      - name: Set custom version
        if: github.event.inputs.rel_version != ''
        run: |
          echo SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.rel_version }} >> $GITHUB_ENV

      - name: Build MacOS wheel
        if: runner.os == 'macOS'
        run: |
          packaging/python/build_wheels.bash osx ${{ matrix.python-version }} coreneuron

      - name: Build Manylinux wheel
        if: runner.os != 'macOS'
        run: |
          # manylinux does not support multi-platform images yet (see
          # https://github.com/pypa/manylinux/issues/1306), so as a workaround,
          # we use two custom input variables, one for x86, and one for arm
          if [[ "${{ matrix.os }}" =~ .*arm$ ]]
          then
            BASE_IMAGE="${{ github.event.inputs.base_image_aarch64 }}"
            BASE_IMAGE="${BASE_IMAGE:-${{ matrix.base_image }}}"
          else
            BASE_IMAGE="${{ github.event.inputs.base_image_x86_64 }}"
            BASE_IMAGE="${BASE_IMAGE:-${{ matrix.base_image }}}"
          fi
          docker run --rm \
            -w /root/nrn \
            -v $(pwd):/root/nrn \
            -e NEURON_NIGHTLY_TAG \
            -e NRN_NIGHTLY_UPLOAD \
            -e SETUPTOOLS_SCM_PRETEND_VERSION \
            -e NRN_BUILD_FOR_UPLOAD=1 \
            ${BASE_IMAGE} \
            packaging/python/build_wheels.bash linux ${{ matrix.python-version }} coreneuron

      - name: Upload wheel files
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.python-version }}-${{ matrix.os }}
          path: wheelhouse/*.whl

      - name: Setup Python ${{ matrix.python-version }} for testing
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        if: runner.os != 'macOS'
        run: |
          sudo apt update
          sudo apt install -y mpich openmpi-bin libopenmpi-dev libmpich-dev

      - name: Test wheel with ${{ matrix.python-version }}
        run: |
          minor_version="$(python${{ matrix.python-version }} -c 'import sys;print(sys.version_info.minor)')"
          packaging/python/test_wheels.sh $(which python${{ matrix.python-version }}) wheelhouse/*cp3${minor_version}*.whl

  merge:
    name: Merge artifacts
    runs-on: ubuntu-latest
    needs: [build-test]
    steps:
      - name: Merge Artifacts
        id: merge-artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          delete-merged: true
          name: wheels
          pattern: wheels-*

      - name: Create comment with URL to artifact
        if: github.event.pull_request
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✔️ ${{ github.event.pull_request.head.sha }} -> [artifacts URL](${{ steps.merge-artifacts.outputs.artifact-url }})

  pypi-publish-nightly:
    name: Upload nightly wheels to PyPI
    runs-on: ubuntu-latest
    needs: merge
    if: github.event_name == 'schedule'
    environment:
      name: pypi
      url: https://pypi.org/p/neuron-nightly
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download wheels from artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  pypi-publish-release:
    name: Upload release wheels to PyPI
    runs-on: ubuntu-latest
    needs: merge
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.upload == 'true'
    environment:
      name: pypi
      url: https://pypi.org/p/neuron
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download wheels from artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  final:
    name: Final CI
    needs: [merge]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check if CI matrix is successful
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
          }}
        run: exit 1
