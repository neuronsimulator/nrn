name: Windows Installer

concurrency:
  # Don't cancel on master, creating a PR when a push workflow is already going will cancel the push workflow in favour of the PR workflow
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_id || github.event.number && github.head_ref || github.ref_name }}
  cancel-in-progress: true

on: [push]
  # merge_group:
  # workflow_call:
  #   inputs:
  #     tag:
  #       description: 'Release version (tag name)'
  #       default: ''
  #       required: true
  #       type: string
  # push:
  #   branches:
  #     - master
  #     - release/**
  # pull_request:
  #   branches:
  #     - master
  #     - release/**
# TODO : https://github.com/neuronsimulator/nrn/issues/1063
#    paths-ignore:
#      - '**.md'
#      - '**.rst'
#      - 'docs/**'

# The Github runner image contains the latest patch versions. Drop the last version
# component to use cached software.
env:
    PYTHON_VERSIONS: |
      3.9
      3.10
      3.11

jobs:
  WindowsInstaller:
    runs-on: windows-latest
    timeout-minutes: 45

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.tag }}
        fetch-depth: 500

    - uses: mpi4py/setup-mpi@v1

    # The cache setting will chache installed Python packages, and will be refreshed if
    # requirements.txt changes.
    - uses: actions/setup-python@v4
      id: cpy
      with:
        python-version: ${{ env.PYTHON_VERSIONS }}
        cache: 'pip'
        update-environment: false

    - name: Install Python dependencies (will be cached)
      run: |
        $pythons = $env:PYTHON_VERSIONS -Split "\s+" | Foreach-Object {
          If ($_ -ne "") {
            Get-Item "C:\hostedtoolcache\windows\Python\$_*\x64\python.exe"
          }
        } | Foreach-Object { "$_" }

        $firstPython = $pythons[0]
        "firstPython=${firstPython}" | Out-File -FilePath $env:GITHUB_ENV -Append
        $allPythons = $pythons -Join ";"
        "allPythons=${allPythons}" | Out-File -FilePath $env:GITHUB_ENV -Append

        $pythons | Foreach-Object {
          & $_ -m pip install -r ci/uv_requirements.txt
          & $_ -m uv pip install -r ci/requirements.txt
        }

        $firstCython = Join-Path $(Get-Item $firstPython).DirectoryName -childPath "Scripts" -AdditionalChildPath "cython.exe"
        "firstCython=${firstCython}" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh
      working-directory: ${{runner.workspace}}\nrn

    - name: Retrieve rxd test data
      run: |
        git submodule update --init test/rxd/testdata
      shell: pwsh
      working-directory: ${{runner.workspace}}\nrn

    - name: Install Build Dependencies
      run: |
        choco install --no-progress sed winflexbison3
      shell: pwsh
      working-directory: ${{runner.workspace}}

    - name: Build and Create Installer
      run: |
        git fetch --tags
        cmake `
          -B build -S . `
          -DCMAKE_BUILD_TYPE=Release `
          -DNRN_ENABLE_INTERVIEWS=ON `
          -DNRN_ENABLE_MPI=OFF `
          -DNRN_ENABLE_MPI_DYNAMIC=OFF `
          -DNRN_ENABLE_PYTHON=OFF `
          -DNRN_ENABLE_PYTHON_DYNAMIC=OFF `
          -DNRN_ENABLE_RX3D=OFF `
          -DNRN_PYTHON_DYNAMIC="${env:allPythons}" `
          -DNRN_RX3D_OPT_LEVEL=2 `
          -DCYTHON_EXECUTABLE="${env:firstCython}" `
          -DPYTHON_EXECUTABLE="${env:firstPython}"
        cmake --build build --config Release
      shell: pwsh
      working-directory: ${{runner.workspace}}\nrn
      env:
        BUILD_SOURCESDIRECTORY: ${{runner.workspace}}\nrn
