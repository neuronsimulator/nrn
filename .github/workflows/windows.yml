name: Windows Installer

concurrency:
  # Don't cancel on master, creating a PR when a push workflow is already going will cancel the push workflow in favour of the PR workflow
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_id || github.event.number && github.head_ref || github.ref_name }}
  cancel-in-progress: true

on:
  merge_group:
  workflow_call:
    inputs:
      tag:
        description: 'The branch/commit of NEURON to checkout'
        default: ''
        required: true
        type: string
  push:
    branches:
      - master
      - release/**
  pull_request:
    branches:
      - master
      - release/**
# TODO : https://github.com/neuronsimulator/nrn/issues/1063
#    paths-ignore:
#      - '**.md'
#      - '**.rst'
#      - 'docs/**'

# The Github runner image contains the latest patch versions. Drop the last version
# component to use cached software.
env:
    PYTHON_VERSIONS: |
      3.9
      3.10
      3.11

jobs:
  WindowsInstaller:
    name: Windows installer
    runs-on: windows-latest
    timeout-minutes: 45

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.tag }}
        submodules: recursive
        fetch-tags: true  # Ensures tags are available for git describe

    - name: Retrieve rxd test data
      run: |
        git submodule update --init test/rxd/testdata
      shell: pwsh
      working-directory: ${{runner.workspace}}\nrn

    - name: Install Build Dependencies
      run: |
        choco install --no-progress sed winflexbison3
      shell: pwsh
      working-directory: ${{runner.workspace}}

    - name: Build and Create Installer
      run: |
        git fetch --tags
        cmake `
          -B build -S . `
          -DCMAKE_BUILD_TYPE=Release `
          -DNRN_ENABLE_INTERVIEWS=ON `
          -DNRN_ENABLE_MPI=OFF `
          -DNRN_ENABLE_MPI_DYNAMIC=OFF `
          -DNRN_ENABLE_PYTHON=OFF `
          -DNRN_ENABLE_PYTHON_DYNAMIC=OFF `
          -DNRN_ENABLE_RX3D=OFF `
          -DNRN_ENABLE_TESTS=ON `
          -DNRN_PYTHON_DYNAMIC="${env:allPythons}" `
          -DNRN_RX3D_OPT_LEVEL=2 `
          -DCYTHON_EXECUTABLE="${env:firstCython}" `
          -DPYTHON_EXECUTABLE="${env:firstPython}"
        cmake --build build --config Release -v
      shell: pwsh
      working-directory: ${{runner.workspace}}\nrn

    - name: Test Installer
      run: |
        ctest --output-on-failure -j
      shell: pwsh
      working-directory: ${{runner.workspace}}\nrn\build
