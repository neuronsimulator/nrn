name: NEURON Release

on:
  workflow_dispatch:
    inputs:
      rel_branch:
        description: 'Release branch/commit'
        default: 'release/x.y'
        required: true
      rel_tag:
        description: 'Release version (tag name)'
        default: 'x.y.z'
        required: true

env:
  GH_REPO: ${{ github.server_url }}/${{ github.repository }}
  REL_TAG: ${{ github.event.inputs.rel_tag }}
  REL_BRANCH: ${{ github.event.inputs.rel_branch }}

jobs:
  tag-n-release:
    runs-on: ubuntu-latest
    name: tag-n-release ${{ github.event.inputs.rel_tag }} (${{ github.event.inputs.rel_branch }})
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
      rel_tag: ${{ env.REL_TAG }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout branch ${{ env.REL_BRANCH }}
        with:
            ref: ${{ env.REL_BRANCH }}

      - name: Create and upload tag ${{ env.REL_TAG }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a $REL_TAG -m "${REL_TAG}"
          git push origin $REL_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{runner.workspace}}/nrn

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.REL_TAG }}
          name: Release ${{ env.REL_TAG }}
          prerelease: true

  nrn-full-src-package:
    runs-on: ubuntu-latest
    needs: tag-n-release
    steps:
    - name: Checkout feature-rich code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Upload nrn-full-src-package to release
      run: |
        filename="nrn-full-src-package-${{ needs.tag-n-release.outputs.rel_tag }}.tar.gz"
        topdir="nrn-${{ needs.tag-n-release.outputs.rel_tag }}"
        # taken from:
        # https://stackoverflow.com/a/67389978
        git ls-files --recurse-submodules > nrn_files
        # we also need the .git dir for now
        find .git >> nrn_files
        # cannot use --xform as it screws up the symbolic links. So
        # do a normal tar, untar into topdir, and tar again.
        mkdir -p tmp/$topdir
        tar -c -T nrn_files | tar -x -C tmp/$topdir
        (cd tmp && tar caf ../$filename $topdir)
        rm -rf tmp
        gh release upload ${{ needs.tag-n-release.outputs.rel_tag }} ${filename}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-full-src-package:
    runs-on: ubuntu-latest
    needs: [nrn-full-src-package, tag-n-release]
    steps:
      - name: Install apt packages
        run: |
          sudo apt-get install -y bison flex libreadline-dev libfl-dev libmpich-dev

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version : '3.18'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build nrn-full-src-package
        run: |
          topdir="nrn-${{ needs.tag-n-release.outputs.rel_tag }}"
          gh release download ${{ needs.tag-n-release.outputs.rel_tag }} --pattern 'nrn-full-src-package*' --output nrn.tar.gz
          tar xf nrn.tar.gz
          python -m pip install -r ${topdir}/nrn_requirements.txt
          # we build a simple configuration to save on CI time
          cmake -B build -DNRN_ENABLE_INTERVIEWS=OFF -DNRN_ENABLE_MPI=OFF -DNMODL_ENABLE_PYTHON_BINDINGS=OFF -DNRN_ENABLE_CORENEURON=OFF -S ${topdir}/
          cmake --build build --parallel $(nproc)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-installer:
    needs: tag-n-release
    uses: neuronsimulator/nrn/.github/workflows/windows.yml@master
    with:
      tag: ${{ needs.tag-n-release.outputs.rel_tag }}
