version: 2.1

orbs:
  python: circleci/python@3.0.0

jobs:
  manylinux_2_28-aarch64:

    parameters:
      NRN_PYTHON_VERSION_MINOR:
        type: string
      NRN_NIGHTLY_UPLOAD:
        type: string

    machine:
      image: default

    resource_class: arm.medium

    steps:
      - checkout
      - run:
          name: Build manylinux AArch64 wheel
          command: |
            docker run --rm \
                -w /root/nrn \
                -v $PWD:/root/nrn \
                -v /opt/nrnwheel/mpt:/nrnwheel/mpt \
                -e NEURON_NIGHTLY_TAG \
                -e NRN_NIGHTLY_UPLOAD \
                -e NRN_RELEASE_UPLOAD \
                -e SETUPTOOLS_SCM_PRETEND_VERSION \
                -e NRN_BUILD_FOR_UPLOAD=1 \
                'docker.io/neuronsimulator/neuron_wheel:manylinux_2_28_aarch64' \
                packaging/python/build_wheels.bash linux 3<< parameters.NRN_PYTHON_VERSION_MINOR >> coreneuron

      - store_artifacts:
          path: ./wheelhouse
          destination: artifacts

      - run:
          name: Test manylinux AArch64 wheel
          command: |
            sudo apt purge -y needrestart
            sudo apt update
            echo "deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/deadsnakes-ppa.list && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F23C5A6CF475977595C89F51BA6932366A755776 && sudo apt update
            sudo apt update
            # install mpi dependencies
            sudo apt install -y mpich openmpi-bin libopenmpi-dev libmpich-dev
            version=3.<< parameters.NRN_PYTHON_VERSION_MINOR >>
            # install Python from deadsnakes
            sudo apt install -y python${version}-venv libpython${version}-dev g++ make

            export PYTHON_EXE=$(which python3.<< parameters.NRN_PYTHON_VERSION_MINOR >>)

            # test wheel
            packaging/python/test_wheels.sh $PYTHON_EXE $(ls -t wheelhouse/*.whl)

      - run:
          name: Upload nightly wheel to pypi.org
          command: |
            if [ "<< parameters.NRN_NIGHTLY_UPLOAD >>" == "true" ]; then
              python -m pip install --upgrade pip
              python -m pip install twine
              python -m twine upload --verbose --skip-existing -u $TWINE_USERNAME -p $TWINE_PASSWORD  wheelhouse/*.whl
            else
              echo "Skipping pypi.org upload!"
            fi

workflows:

  build-workflow:
    jobs:
      - manylinux_2_28-aarch64:
          filters:
            branches:
              only:
                - /release\/.*/
                - /circleci\/.*/
          matrix:
            parameters:
              NRN_PYTHON_VERSION_MINOR: ["13"]
              NRN_NIGHTLY_UPLOAD: ["false"]

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - manylinux_2_28-aarch64:
          matrix:
            parameters:
              NRN_PYTHON_VERSION_MINOR: ["9", "10", "11", "12", "13"]
              NRN_NIGHTLY_UPLOAD: ["true"]
