#!/usr/bin/env sh

# =============================================================================
# Simple wrapper for CMake that builds mod files
# =============================================================================

set -eu

srcdir="${PWD}"
bindir="$(uname -m)"

# Where the `*.cmake` files are located
NRN_CMAKE_PREFIX_PATH_DEFAULT="$(readlink -f "$(dirname "${0}")/../lib/cmake/")"
if [ -n "${CMAKE_PREFIX_PATH:-}" ]; then
    CMAKE_PREFIX_PATH="${CMAKE_PREFIX_PATH}:${NRN_CMAKE_PREFIX_PATH_DEFAULT}"
else
    CMAKE_PREFIX_PATH="${NRN_CMAKE_PREFIX_PATH_DEFAULT}"
fi

if command -v xcrun >/dev/null 2>&1; then
    @NRN_OSX_BUILD_TRUE@export SDKROOT="$(xcrun --sdk macosx --show-sdk-path)"
    @NRN_OSX_BUILD_TRUE@export MACOSX_DEPLOYMENT_TARGET="@CMAKE_OSX_DEPLOYMENT_TARGET@"
    if [ -z "${MACOSX_DEPLOYMENT_TARGET}" ]; then
        unset MACOSX_DEPLOYMENT_TARGET
    fi
fi

# Check they are the same; if not, report an error, and force the user to choose
default_cmakelists="${NRN_CMAKE_PREFIX_PATH_DEFAULT}/neuron/nrnivmodl.cmake"
current_cmakelists="${srcdir}/CMakeLists.txt"
if [ -f "${current_cmakelists}" ] && ! cmp --silent "${default_cmakelists}" "${current_cmakelists}"; then
    printf "ERROR: %s exists and is different from %s; " "${current_cmakelists}" "${default_cmakelists}"
    printf "please remove %s manually, " "${current_cmakelists}"
    echo "or change to another directory, and then rerun nrnivmodl again"
    exit 1
fi

# copy to current dir
cp -a "${default_cmakelists}" "${current_cmakelists}"

# In case of no files, default to using the files in the current dir
if [ $# -lt 1 ]; then
    set -- ./*.mod
fi

# In case of a single input, check if it's a directory; if it is, collect all mod files in it
if [ $# -eq 1 ] && [ -d "${1}" ]; then
    set -- "${1}"/*.mod
fi

# TODO what if the mod filenames contain semicolons?
modfiles="$(printf "%s;" "$@")"
# remove any trailing semicolons from the list
modfiles="${modfiles%%;}"

# Configure the mod files
cmake -S "${srcdir}" -B "${bindir}" -DMOD_FILES="${modfiles}" -DCORENEURON="@CORENEURON@"

# Parallelism for the build can be set by the `CMAKE_BUILD_PARALLEL_LEVEL` env
# variable
CMAKE_BUILD_PARALLEL_LEVEL="${CMAKE_BUILD_PARALLEL_LEVEL:-4}"
cmake --build "${bindir}"
